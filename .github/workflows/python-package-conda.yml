name: QMCPy Automated Tests and Coverage Report
on: [push]

jobs:
  tests:
    name: Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            # Use newer runner versions that support modern PyTorch
            os: ["macos-13", "ubuntu-22.04", "windows-2022"]
        fail-fast: false  # Continue testing other OS even if one fails
    env:
      # Environment variables for PyTorch compilation compatibility
      MACOSX_DEPLOYMENT_TARGET: "10.15"  
      CMAKE_OSX_DEPLOYMENT_TARGET: "10.15"
      PIP_PREFER_BINARY: "1"  # Prefer pre-built wheels over source compilation
      PIP_ONLY_BINARY: ":all:"  # Force binary-only installation where possible
      TORCH_CUDA_ARCH_LIST: "6.0;6.1;7.0;7.5;8.0;8.6"  # CUDA architectures for GPU builds
      MAX_JOBS: "2"  # Limit parallel compilation jobs to avoid memory issues
    steps:
      - uses: actions/checkout@v4 
      - uses: conda-incubator/setup-miniconda@v3  
        with:
          miniconda-version: "latest"
          activate-environment: qmcpy
          environment-file: environment.yml
          auto-activate-base: false
          python-version: "3.9"
          channels: pytorch,conda-forge,defaults  # Ensure pytorch channel is available
      
      # Add platform-specific environment setup
      - name: Set Windows environment
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: |
          echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
          echo "MSSdk=1" >> $GITHUB_ENV
          echo "CMAKE_GENERATOR=Visual Studio 17 2022" >> $GITHUB_ENV
          echo "CMAKE_GENERATOR_PLATFORM=x64" >> $GITHUB_ENV
          echo "PIP_ONLY_BINARY=:all:" >> $GITHUB_ENV
          echo "PIP_NO_BUILD_ISOLATION=false" >> $GITHUB_ENV
      
      - name: Setup Visual Studio tools (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2
      
      - name: Set macOS environment  
        if: runner.os == 'macOS'
        shell: bash -l {0}
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=10.15" >> $GITHUB_ENV
          echo "CMAKE_OSX_DEPLOYMENT_TARGET=10.15" >> $GITHUB_ENV
      - shell: bash -l {0}
        run: |
          conda info
          conda list
          echo "PyTorch version check:"
          python -c "import torch; print(f'PyTorch: {torch.__version__}')" || echo "PyTorch not yet installed"
      
      # Install PyTorch geometric dependencies with retries
      - name: Install PyTorch Geometric Dependencies
        shell: bash -l {0}
        run: |
          echo "Installing/upgrading PyTorch ecosystem..."
          # Try conda first, fallback to pip with explicit binary preference
          conda install pytorch-geometric -c pyg -c pytorch -c conda-forge --yes || \
          pip install --only-binary=all --upgrade torch-geometric torch-cluster torch-scatter torch-sparse torch-spline-conv || \
          pip install --prefer-binary --upgrade torch-geometric torch-cluster torch-scatter torch-sparse torch-spline-conv
          
      - name: Install QMCPy 
        shell: bash -l {0}
        run: |
          pip install -e .
      - name: Run Tests
        shell: bash -l {0}
        timeout-minutes: 45  # Add timeout to prevent hanging builds
        run: |
          echo "Running tests on $RUNNER_OS..."
          if [ "$RUNNER_OS" == "Linux" ]; then
            make tests
          else
            make tests_no_docker
          fi
      - name: Upload to Codecov
        shell: bash -l {0}
        run: |
          python -m coverage xml -i # genereate coverage.xml
          # python -m codecov -t e87cdb03-ccdd-44df-9849-8c5bc460cb9e  # fails without token
          # bash <(curl https://codecov.io/bash)
          curl -s https://codecov.io/bash | bash
