name: QMCPy Automated Tests and Coverage Report
on: [push]

jobs:
  tests:
    name: Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["macos-13", "ubuntu-22.04", "windows-2022"]
        fail-fast: false  # Continue testing other OS even if one fails
    env:
      # Environment variables for PyTorch compilation compatibility
      MACOSX_DEPLOYMENT_TARGET: "10.15"  
      CMAKE_OSX_DEPLOYMENT_TARGET: "10.15"
      PIP_PREFER_BINARY: "1"  # Prefer pre-built wheels over source compilation
      TORCH_CUDA_ARCH_LIST: "6.0;6.1;7.0;7.5;8.0;8.6"  # CUDA architectures for GPU builds
      MAX_JOBS: "3"  
    steps:
      - uses: actions/checkout@v4 
      - uses: conda-incubator/setup-miniconda@v3  
        if: runner.os != 'Windows'
        with:
          miniconda-version: "latest"
          activate-environment: qmcpy
          environment-file: environment.yml
          auto-activate-base: false
          python-version: "3.9"
          channels: pytorch,conda-forge,defaults
      
      - uses: conda-incubator/setup-miniconda@v3  
        if: runner.os == 'Windows'
        with:
          miniconda-version: "latest"
          activate-environment: qmcpy
          environment-file: environment_windows.yml
          auto-activate-base: false
          python-version: "3.9"
          channels: pytorch,conda-forge,defaults
      
      - name: Add C++ Build Tools
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      # Add platform-specific environment setup
      - name: Set Windows environment
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: |
          echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
          echo "MSSdk=1" >> $GITHUB_ENV
      
      - name: Set macOS environment  
        if: runner.os == 'macOS'
        shell: bash -l {0}
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=10.15" >> $GITHUB_ENV
          echo "CMAKE_OSX_DEPLOYMENT_TARGET=10.15" >> $GITHUB_ENV
      
      - name: Verify Environment
        shell: bash -l {0}
        run: |
          conda info
          conda list
          echo "PyTorch version check:"
          python -c "import torch; print(f'PyTorch: {torch.__version__}')" || echo "PyTorch not installed"
      
      - name: Install QMCPy (Windows)
        if: runner.os == 'Windows'
        shell: cmd /C call {0}
        run: |
          pip install -e .

      - name: Install QMCPy (macOS/Linux)
        if: runner.os != 'Windows'
        shell: bash -l {0}
        run: |
          pip install -e .
          
      - name: Run Tests (Windows)
        if: runner.os == 'Windows'
        shell: cmd /C call {0}
        timeout-minutes: 45
        run: |
          echo Running tests on %RUNNER_OS%...
          make tests_no_docker
      - name: Run Tests (macOS/Linux)
        if: runner.os != 'Windows'
        shell: bash -l {0}
        timeout-minutes: 45
        run: |
          echo "Running tests on $RUNNER_OS..."
          if [ "$RUNNER_OS" == "Linux" ]; then
            make tests
          else
            make tests_no_docker
          fi
      - name: Upload to Codecov
        shell: bash -l {0}
        run: |
          python -m coverage xml -i # generate coverage.xml
          # python -m codecov -t e87cdb03-ccdd-44df-9849-8c5bc460cb9e  # fails without token
          # bash <(curl https://codecov.io/bash)
          curl -s https://codecov.io/bash | bash
